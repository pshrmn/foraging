"use strict";

/****************************************************************************************
            GLOBALS
    Fetch:              used to select elements
    Parent:             used to limit selections to children element of parent selector
    UI:                 used to interact with the CollectorJS user interface
    CollectOptions:     stores user options for how CollectorJS works
    SelectorView:       interactions with the selector view
    RuleView:           interactions with the rule view
    Family:             family generated by clicking on an element in the page
****************************************************************************************/

(function runCollectorJS(){
    chromeLoadOptions();
    chromeSetupHostname();
    
    // tabs
    tabEvents();

    //views
    optionsViewEvents();
})();

/*
reset state of interface
especially useful for when cancelling creating or editing a selector or rule
*/
function resetInterface(){
    Family.turnOff();
    if ( Parent.exists ){
        Parent.show();
    }
    clearClasses(["queryCheck", "collectHighlight", "savedPreview"]);
    SelectorView.reset();
    RuleView.reset();
}

/***********************
    EDIT HELPERS
***********************/

// setup the selector form to edit the parent. selectorSet is passed in because parent is part of it
function editParent(selectorSet){
    Parent.type = "parent";
    SelectorView.editing = true;
    SelectorView.editingObject = selectorSet;
    var selector = selectorSet.parent.selector,
        low = selectorSet.parent.low || "",
        high = selectorSet.parent.high || "";
    Family.fromSelector(selectorSet.parent.selector, "body");
    SelectorView.show("parent", selectorSet.object().parent);
}

// setup the selector form to edit the selector
function editSelector(selector){
    Parent.type = "selector";
    SelectorView.editing = true;
    SelectorView.editingObject = selector;
    Family.fromSelector(selector.selector);
    SelectorView.show("selector", selector.object());
}

// setup the rule form to edit the rule
function editRule(rule){
    RuleView.editing = true;
    RuleView.editingObject = rule;
    RuleView.show(rule.parentSelector.selector, rule.object());
}
